/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ipac;

import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Arga Diaz Prawira Yudha
 */
public class MaxHostIP extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    public MaxHostIP() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.JPanel maxHostPane = new javax.swing.JPanel();
        inputPanel = new javax.swing.JPanel();
        inputLabelIP = new javax.swing.JLabel();
        inputLabelCIDR = new javax.swing.JLabel();
        cidrTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        generateButton = new javax.swing.JButton();
        ipTextField = new javax.swing.JTextField();
        resultPanel = new javax.swing.JPanel();
        resultScrollPane = new javax.swing.JScrollPane();
        resultTextPane = new javax.swing.JTextPane();
        resultLabel = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        menuButton = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        classTypeMenu = new javax.swing.JMenuItem();
        DNSValidMenu = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IPAC - Beta Version 1.0.0 (Max Host Calculator)");
        setResizable(false);

        inputPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        inputLabelIP.setText("IP");

        inputLabelCIDR.setText("CIDR");

        jLabel1.setText("/");

        generateButton.setText("Generate");
        generateButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        generateButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        generateButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        generateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout inputPanelLayout = new javax.swing.GroupLayout(inputPanel);
        inputPanel.setLayout(inputPanelLayout);
        inputPanelLayout.setHorizontalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(generateButton, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                    .addGroup(inputPanelLayout.createSequentialGroup()
                        .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(inputPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(cidrTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(inputLabelIP)
                            .addComponent(inputLabelCIDR))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(ipTextField))
                .addContainerGap())
        );
        inputPanelLayout.setVerticalGroup(
            inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inputPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inputLabelIP)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(inputLabelCIDR)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(inputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cidrTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(32, 32, 32)
                .addComponent(generateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(142, Short.MAX_VALUE))
        );

        resultPanel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        resultTextPane.setEditable(false);
        resultScrollPane.setViewportView(resultTextPane);

        resultLabel.setText("Calculation Result:");

        javax.swing.GroupLayout resultPanelLayout = new javax.swing.GroupLayout(resultPanel);
        resultPanel.setLayout(resultPanelLayout);
        resultPanelLayout.setHorizontalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(resultPanelLayout.createSequentialGroup()
                        .addComponent(resultLabel)
                        .addGap(0, 145, Short.MAX_VALUE))
                    .addComponent(resultScrollPane, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        resultPanelLayout.setVerticalGroup(
            resultPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(resultPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(resultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(resultScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout maxHostPaneLayout = new javax.swing.GroupLayout(maxHostPane);
        maxHostPane.setLayout(maxHostPaneLayout);
        maxHostPaneLayout.setHorizontalGroup(
            maxHostPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
            .addGroup(maxHostPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(maxHostPaneLayout.createSequentialGroup()
                    .addComponent(inputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 263, Short.MAX_VALUE)))
            .addGroup(maxHostPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, maxHostPaneLayout.createSequentialGroup()
                    .addGap(0, 140, Short.MAX_VALUE)
                    .addComponent(resultPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        maxHostPaneLayout.setVerticalGroup(
            maxHostPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
            .addGroup(maxHostPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(inputPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(maxHostPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(resultPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        menuBar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        menuBar.setToolTipText("");

        menuButton.setText("Calculator Type");
        menuButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        jMenuItem1.setText("Maximum Host");
        jMenuItem1.setEnabled(false);
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        menuButton.add(jMenuItem1);

        classTypeMenu.setText("Class Type");
        classTypeMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classTypeMenuActionPerformed(evt);
            }
        });
        menuButton.add(classTypeMenu);

        DNSValidMenu.setText("DNS Validation");
        DNSValidMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DNSValidMenuActionPerformed(evt);
            }
        });
        menuButton.add(DNSValidMenu);

        menuBar.add(menuButton);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(maxHostPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(maxHostPane, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void classTypeMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classTypeMenuActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Class_Type menu = new Class_Type();
        menu.setVisible(true);
    }//GEN-LAST:event_classTypeMenuActionPerformed

    private void DNSValidMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DNSValidMenuActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        DNS_Valid menu = new DNS_Valid();
        menu.setVisible(true);
    }//GEN-LAST:event_DNSValidMenuActionPerformed

    private void generateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateButtonActionPerformed
        // TODO add your handling code here:
        String result="";
        if( !ipTextField.getText().isEmpty() &&  !cidrTextField.getText().isEmpty()
                && Operation.isIpFormat(ipTextField.getText())){
            String ip=ipTextField.getText();
            int cidr=Integer.parseInt(cidrTextField.getText());

            if(cidr<24){
                JOptionPane.showMessageDialog(
                    new JFrame(), "This Calculator only support CIDR more than 23 ",
                    "Error Warning", JOptionPane.WARNING_MESSAGE);
            }else{
                result+="IP : "+ip+"\n\n";
                result+="Total Host : "+Operation.hostNum(cidr)+"\n";
                String[] ipHost=Operation.hostValue(ip, Operation.hostNum(cidr));
                result+="Network ID : "+ipHost[0]+"\n";
                result+="Broadcast ID : "+ipHost[ipHost.length-1]+"\n\n";
                result+="Usable Host:\n";
                for(int i=1;i<ipHost.length-1;i++){
                    result+=ipHost[i]+"\n";
                }
                result+="Subnet Mask: "+Operation.subnet(cidr);
                resultTextPane.setText(result);
            }
            
        }else{
            JOptionPane.showMessageDialog(
                    new JFrame(), "Please enter the correct IP and CIDR format.",
                    "Error Warning", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_generateButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem DNSValidMenu;
    private javax.swing.JTextField cidrTextField;
    private javax.swing.JMenuItem classTypeMenu;
    private javax.swing.JButton generateButton;
    private javax.swing.JLabel inputLabelCIDR;
    private javax.swing.JLabel inputLabelIP;
    private javax.swing.JPanel inputPanel;
    private javax.swing.JTextField ipTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuButton;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JScrollPane resultScrollPane;
    private javax.swing.JTextPane resultTextPane;
    // End of variables declaration//GEN-END:variables
}
